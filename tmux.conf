# cat << ►_◄ > /dev/null
#
# -- general -------------------------------------------------------------------

set -g default-terminal "screen-256color" # colors!
setw -g xterm-keys on
set -s escape-time 0                      # fastest command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s quiet on                           # disable various messages

set -g prefix2 C-a                        # GNU-Screen compatible prefix
bind C-a send-prefix -2

set -g buffer-limit 10                    # number of buffers
set -g history-limit 1000                 # boost history

# edit configuration
bind e new-window -n '~/.tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# -- display -------------------------------------------------------------------

#set -g base-index 1         # start windows numbering at 1
#setw -g pane-base-index 1   # make pane numbering consistent with windows

setw -g automatic-rename on # rename window to reflect current program
set -g renumber-windows on  # renumber windows when a window is closed

set -g set-titles on                        # set terminal title
set -g set-titles-string '#h ❐ #S ● #I #W'

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# 24 hour clock
setw -g clock-mode-style 24

# clear both screen and history
bind -n C-l send-keys C-l \; run 'tmux clear-history'

# activity
set -g monitor-activity on
set -g visual-activity on

# -- navigation ----------------------------------------------------------------

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# pane navigation
bind -r k select-pane -U  # move up (prefix k)
bind -r j select-pane -D  # move down (prefix j)
bind -r h select-pane -L  # move left (prefix h)
bind -r l select-pane -R  # move right (prefix l)
bind > swap-pane -D       # swap current pane with the next one (prefix >)
bind < swap-pane -U       # swap current pane with the previous one (prefix <)

# pane resizing
bind -r ^k resize-pane -U 5 # upward (prefix Ctrl+k)
bind -r ^j resize-pane -D 5 # downward (prefix Ctrl+j)
bind -r ^h resize-pane -L 5 # to the left (prefix Ctrl+h)
bind -r ^l resize-pane -R 5 # to the right (prefix Ctrl+l)

# window navigation
bind Tab last-window      # move to last active window (prefix Tab)

# split window
bind - splitw -v          # vertical split (prefix -)
bind | splitw -h          # horizontal split (prefix |)

# kill window
bind q killw             # kill window (prefix Ctrl+q)

# -- toggle mouse --------------------------------------------------------------

bind m run "cut -c3- ~/.tmux.conf | sh -s toggle_mouse"

# -- man page ------------------------------------------------------------------

bind M command-prompt "splitw -h 'exec man %%'"

# -- status line ---------------------------------------------------------------

# Source tmux statusbar config
# the following configuration created by tmuxline.vim of my vim settings
#   see https://github.com/jarsonfang/vimconfig.git
if-shell "test -f ~/.tmux-statusline.conf" "source ~/.tmux-statusline.conf"

# -- copy mode -----------------------------------------------------------------

setw -g mode-keys vi

bind Enter copy-mode  # enter copy mode
bind b list-buffers   # list paster buffers
bind p paste-buffer   # paste from the top pate buffer
bind P choose-buffer  # choose which buffer to paste from

bind -t vi-copy v begin-selection # select (v)
bind -t vi-copy y copy-selection # copy (y)
bind -t vi-copy Escape cancel

# -- clipboard -----------------------------------------------------------------

bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# -- frequently used default bindings  -----------------------------------------

# '$' Rename the current session.
# ',' Rename the current window.
# 's' Select a new session for the attached client interactively.
# 'w' Choose the current window interactively.
# 'f' Prompt to search for text in open windows.(Note: find windows with the given name)
# '.' Prompt for an index to move the current window.(Note: move the current window to another session.)
# '!' Break the current pane out of the window.(Note: make the current pane as a new window.)
# '#' List all paste buffers.
# '=' Choose which buffer to paste interactively from a list.
# '"' Split the current pane into two, top and bottom.
# '%' Split the current pane into two, left and right.
# ';' Move to the previously active pane.
# ':' Enter the tmux command prompt.
# '{' Swap the current pane with the previous pane.
# '}' Swap the current pane with the next pane.
# 'c' Create a new window.
# '&' Kill the current window.
# 'x' Kill the current pane.
# 'd' Detach the current client.
# 'n' Change to the next window.
# 'z' Toggle the current pane zoom.
# 't' Show the time.
# '~' Show previous messages from tmux, if any.
# '0 to 9' Select windows 0 to 9.

# ►_◄
#
# # exit the script if any statement returns a non-true return value
# set -e
#
# toggle_mouse() {
#   if (tmux show -g -w |grep -q mode-mouse); then
#     old=$(tmux show -g -w | grep mode-mouse | cut -d' ' -f2)
#     new=""
#
#     if [ "$old" = "on" ] ; then
#       new="off"
#     else
#       new="on"
#     fi
#
#     tmux set -g mode-mouse $new \;\
#          set -g mouse-resize-pane $new \;\
#          set -g mouse-select-pane $new \;\
#          set -g mouse-select-window $new \;\
#          display "mouse: $new"
#   else
#     old=$(tmux show -g | grep mouse | head -n 1 | cut -d' ' -f2)
#     new=""
#
#     if [ "$old" = "on" ] ; then
#       new="off"
#     else
#       new="on"
#     fi
#
#     tmux set -g mouse $new \;\
#          display "mouse: $new"
#   fi
# }
#
# $@

